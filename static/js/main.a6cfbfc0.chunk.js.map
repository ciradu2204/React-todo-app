{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","className","styles","item","style","type","checked","onChange","handleChangeProps","onClick","color","fontSize","deleteTodoProps","fontStyle","opacity","paddingLeft","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","newArray","Array","from","todos","map","Header","fontWeight","marginBottom","lineHeight","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","TodoContainer","temp","localStorage","getItem","savedTodos","JSON","parse","res","i","push","getInitialTodos","setTodos","useEffect","stringify","setItem","newTodo","uuidv4","prevState","result","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4OAkFeA,EA5EE,SAAAC,GAAU,IAAD,EAEQC,oBAAS,GAFjB,mBAEfC,EAFe,KAENC,EAFM,OAyBWH,EAAMI,KAA/BC,EAzBc,EAyBdA,UAAWC,EAzBG,EAyBHA,GAAIC,EAzBD,EAyBCA,MAEnBC,EAAW,GACXC,EAAW,GASX,OAPAP,EACAM,EAASE,QAAU,OAEnBD,EAASC,QAAU,OAKf,qBAAIC,UAAWC,IAAOC,KAAtB,UACI,sBAAMC,MAAON,EAAb,UACI,uBAAOO,KAAK,WAAWC,QAASX,EAAWY,SAAU,kBAAMjB,EAAMkB,kBAAkBZ,MACnF,wBAAQa,QArCF,WAClBhB,GAAW,IAoCC,SACI,cAAC,IAAD,CACIW,MAAO,CAAEM,MAAO,YAAaC,SAAU,YAI/C,wBAAQF,QAAS,kBAAMnB,EAAMsB,gBAAgBhB,IAA7C,SACI,cAAC,IAAD,CACIQ,MAAO,CAAEM,MAAO,YAAaC,SAAU,YAG/C,sBAAMP,MAAOT,EAtCN,CACnBkB,UAAW,SACXH,MAAO,UACPI,QAAS,GACTC,YAAa,GACbC,eAAgB,gBAGK,CACrBD,YAAa,IA6BD,SACKlB,OAGT,uBACIQ,KAAK,OACLD,MAAOL,EACPE,UAAWC,IAAOe,UAClBC,MAAOrB,EACPU,SAAU,SAAAY,GACN7B,EAAM8B,UAAUD,EAAEE,OAAOH,MAAOtB,IAEpC0B,UAxDU,SAAAC,GACJ,UAAdA,EAAMC,KACN/B,GAAW,UCSRgC,EArBG,SAAAnC,GACd,IAAMoC,EAAWC,MAAMC,KAAKtC,EAAMuC,OAClC,OAEO,6BACEH,EAASI,KAAI,SAAApC,GAAI,OACd,cAAC,EAAD,CAEIA,KAAMA,EACNc,kBAAmBlB,EAAMkB,kBACzBI,gBAAiBtB,EAAMsB,gBACvBQ,UAAW9B,EAAM8B,WAJZ1B,EAAKE,UCWfmC,EApBA,WAEX,OACI,iCACI,oBAAI3B,MAAO,CACPO,SAAU,OACVqB,WAAY,MACZC,aAAc,OACdC,WAAY,MACZxB,MAAO,UACPyB,cAAe,YACfC,UAAW,UAPf,sB,OCkDGC,EArDG,SAAA/C,GAAU,IAAD,EAEWC,mBAAS,CACvCM,MAAO,KAHY,mBAEhByC,EAFgB,KAELC,EAFK,KA2BvB,OACI,mCACA,uBAAMC,SAdW,SAAArB,GACjBA,EAAEsB,iBACEH,EAAUzC,MAAM6C,QAChBpD,EAAMqD,aAAaL,EAAUzC,OAC7B0C,EAAa,CACT1C,MAAO,MAGX+C,MAAM,sBAMoB3C,UAAU,iBAAxC,UACI,uBACII,KAAK,OACLJ,UAAU,aACV4C,YAAY,aACZ3B,MAAOoB,EAAUzC,MACjBiD,KAAK,QACLvC,SA7BK,SAAAY,GACboB,EAAa,2BACPD,GADM,kBAEPnB,EAAEE,OAAOyB,KAAO3B,EAAEE,OAAOH,YA6BtB,wBAAQjB,UAAU,eAAlB,SACI,cAAC,IAAD,CACIG,MAAO,CAAEM,MAAO,WAAYC,SAAU,OAAQoC,UAAW,iB,QCuDlEC,EA7FO,WAElB,IAFwB,EAYEzD,mBAVF,WAEpB,IAAM0D,EAAOC,aAAaC,QAAQ,SAC5BC,EAAaC,KAAKC,MAAML,GAC1BM,EAAM,GACV,IAAK,IAAIC,KAAKJ,EACVG,EAAIE,KAAKL,EAAWI,IAExB,OAAOD,GAAO,GAEiBG,IAZX,mBAYjB7B,EAZiB,KAYV8B,EAZU,KAsExB,OARAC,qBAAU,WAGN,IAAMX,EAAOI,KAAKQ,UAAUhC,GAC5BqB,aAAaY,QAAQ,QAASb,KAC/B,CAACpB,IAMI,qBAAK5B,UAAU,YAAf,SACA,sBAAKA,UAAU,QAAf,UACC,cAAC,EAAD,IACO,cAAC,EAAD,CACI0C,aA3CA,SAAA9C,GAChB,IAAMkE,EAAU,CACZnE,GAAIoE,cACJnE,MAAOA,EACPF,WAAW,GAEfgE,EAAS,GAAD,mBACD9B,GADC,CACMkC,QAqCF,cAAC,EAAD,CACAlC,MAAOA,EACPrB,kBAlEK,SAACZ,GAClB+D,GAAS,SAAAM,GAAS,OACbA,EAAUnC,KAAI,SAAApC,GAEX,OAAIA,EAAKE,KAAOA,EAEL,2BACAF,GADP,IAEIC,WAAYD,EAAKC,YAMlBD,SAqDHkB,gBApCA,SAAAhB,GAEZ,IAAMsE,EAASrC,EAAMsC,QAAO,SAAAzE,GAAI,OAAIA,EAAKE,KAAOA,KAChD+D,EAASO,IAkCG9C,UA9BE,SAACgD,EAAcxE,GAC7B+D,EACI9B,EAAMC,KAAI,SAAApC,GAIN,OAHIA,EAAKE,KAAOA,IACZF,EAAKG,MAAQuE,GAEV1E,e,MC1DvB2E,IAASC,OAEL,cAAC,IAAMC,WAAP,UACQ,cAAC,EAAD,MAERC,SAASC,eAAe,U,kBCV5BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,UAAY,+B","file":"static/js/main.a6cfbfc0.chunk.js","sourcesContent":["import React, { useState, useEffect} from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\nimport { FaRegEdit } from \"react-icons/fa\"\r\n\r\n\r\nconst TodoItem = props => {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    const handleEditing = () => {\r\n        setEditing(true)\r\n    }\r\n\r\n    const handleUpdatedDone = event => {\r\n        if (event.key === \"Enter\") {\r\n            setEditing(false)\r\n        }\r\n    }\r\n\r\n    const completedStyle = {\r\n        fontStyle: \"Italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        paddingLeft: 15,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const unCompletedStyle = {\r\n        paddingLeft: 15,\r\n    }\r\n    const { completed, id, title } = props.todo\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if (editing) {\r\n        viewMode.display = \"none\";\r\n    } else {\r\n        editMode.display = \"none\";\r\n    }\r\n  \r\n      \r\n        return (\r\n            <li className={styles.item}>\r\n                <div  style={viewMode}>\r\n                    <input type=\"checkbox\" checked={completed} onChange={() => props.handleChangeProps(id)} />\r\n                    <button onClick={handleEditing} >\r\n                        <FaRegEdit \r\n                            style={{ color: \"orangered\", fontSize: \"16px\" }}\r\n\r\n                        />\r\n                    </button>\r\n                    <button onClick={() => props.deleteTodoProps(id)}>\r\n                        <FaTrash\r\n                            style={{ color: \"orangered\", fontSize: \"16px\" }}\r\n                        />\r\n                    </button>\r\n                    <span style={completed ? completedStyle : unCompletedStyle}>\r\n                        {title}\r\n                    </span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    style={editMode}\r\n                    className={styles.textInput}\r\n                    value={title}\r\n                    onChange={e => {\r\n                        props.setUpdate(e.target.value, id)\r\n                    }}\r\n                    onKeyDown={handleUpdatedDone}\r\n                />\r\n               \r\n                \r\n            </li>\r\n            )\r\n\r\n    }\r\n       \r\n \r\n\r\n\r\nexport default TodoItem","\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = props => {\r\n    const newArray = Array.from(props.todos)\r\n    return (    \r\n               \r\n           <ul>          \r\n            {newArray.map(todo => (\r\n                <TodoItem\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                    setUpdate={props.setUpdate}\r\n                />\r\n            ))}\r\n\r\n         </ul>\r\n\r\n        )\r\n    }\r\n\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <h1 style={{\r\n                fontSize: \"6rem\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"2rem\",\r\n                lineHeight: \"1em\",\r\n                color: \"#ececec\",\r\n                textTransform: \"lowercase\",\r\n                textAlign: \"center\",\r\n            }}>\r\n               \r\n                todos</h1>\r\n        </header>\r\n        \r\n       )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n\r\nconst InputTodo = props => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n\r\n    })\r\n\r\n    const onChange = e => {\r\n        setInputText({\r\n           ...inputText,\r\n            [e.target.name]: e.target.value\r\n        })\r\n         \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (inputText.title.trim()) {\r\n            props.addTodoProps(inputText.title)\r\n            setInputText({\r\n                title: \"\",\r\n            })\r\n        } else {\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input-text\"\r\n                placeholder=\"Add todo..\"\r\n                value={inputText.title}\r\n                name=\"title\"\r\n                onChange={onChange}\r\n            />\r\n           \r\n                <button className=\"input-submit\">\r\n                    <FaPlusCircle\r\n                        style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\r\n                      />\r\n                </button>\r\n         \r\n        </form>\r\n\r\n        </>\r\n     )\r\n\r\n\r\n}\r\n\r\nexport default InputTodo","import React, { useState, useEffect }from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TodoContainer = () => {\r\n\r\n    const getInitialTodos = () => {\r\n        //getting storedItems\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const savedTodos = JSON.parse(temp)\r\n        let res = [];\r\n        for (var i in savedTodos) {\r\n            res.push(savedTodos[i]);\r\n        }\r\n        return res || []\r\n    }\r\n    const [todos, setTodos] = useState(getInitialTodos());\r\n\r\n    const handleChange = (id) => {\r\n        setTodos(prevState => \r\n             prevState.map(todo => {\r\n\r\n                if (todo.id === id) {\r\n\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n                return todo\r\n               \r\n             }),\r\n        )\r\n    };\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        setTodos(\r\n           [...todos, newTodo]\r\n        );\r\n    };\r\n\r\n    const delTodo = id => {\r\n         \r\n        const result = todos.filter(todo => todo.id !== id);\r\n        setTodos(result)\r\n     \r\n    }\r\n\r\n    const setUpdate = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        //storing todos items \r\n\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n \r\n    return (\r\n\r\n    \r\n            <div className=\"container\">\r\n            <div className=\"inner\">\r\n             <Header />\r\n                    <InputTodo\r\n                        addTodoProps={addTodoItem} />\r\n                    <TodosList\r\n                    todos={todos}\r\n                    handleChangeProps={handleChange}\r\n                    deleteTodoProps={delTodo}\r\n                    setUpdate={setUpdate}\r\n                />\r\n             </div>\r\n            </div>\r\n    \r\n        \r\n        );\r\n    }\r\n  \r\n    \r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\";\r\n\r\n\r\nReactDOM.render(\r\n    \r\n    <React.StrictMode>\r\n            <TodoContainer /> \r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n   \r\n    \r\n\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3oWJK\",\"checkbox\":\"TodoItem_checkbox__3Iwm1\",\"textInput\":\"TodoItem_textInput__3vdlx\"};"],"sourceRoot":""}