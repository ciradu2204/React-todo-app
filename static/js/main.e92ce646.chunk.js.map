{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","onDoubleClick","style","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","fontSize","fontStyle","opacity","paddingLeft","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","newArray","Array","from","todos","map","Header","fontWeight","marginBottom","lineHeight","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","TodoContainer","temp","localStorage","getItem","savedTodos","JSON","parse","res","i","push","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e92ce646.chunk.js","sourcesContent":["import React, { useState, useEffect} from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\n\r\nconst TodoItem = props =>{\r\n\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    const handleEditing = () => {\r\n        setEditing(true)\r\n    }\r\n\r\n    const handleUpdatedDone = event => {\r\n        if (event.key === \"Enter\") {\r\n            setEditing(false)\r\n        }\r\n    }\r\n\r\n    const completedStyle = {\r\n        fontStyle: \"Italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        paddingLeft: 15,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const unCompletedStyle = {\r\n        paddingLeft: 15,\r\n    }\r\n    const { completed, id, title } = props.todo\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if (editing) {\r\n        viewMode.display = \"none\";\r\n    } else {\r\n        editMode.display = \"none\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(\"cleaning up...\")\r\n        }\r\n    }, [])\r\n  \r\n      \r\n        return (\r\n            <li className={styles.item}>\r\n                <div onDoubleClick={handleEditing} style={viewMode}>\r\n                    <input type=\"checkbox\" checked={completed} onChange={() => props.handleChangeProps(id)} />\r\n                    <button onClick={() => props.deleteTodoProps(id)}>\r\n                        <FaTrash\r\n                            style={{ color: \"orangered\", fontSize: \"16px\" }}\r\n                        />\r\n                 </button>\r\n                    <span style={completed ? completedStyle : unCompletedStyle}>\r\n                        {title}\r\n                    </span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    style={editMode}\r\n                    className={styles.textInput}\r\n                    value={title}\r\n                    onChange={e => {\r\n                        props.setUpdate(e.target.value, id)\r\n                    }}\r\n                    onKeyDown={handleUpdatedDone}\r\n                />\r\n               \r\n                \r\n            </li>\r\n            )\r\n\r\n    }\r\n       \r\n \r\n\r\n\r\nexport default TodoItem","\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = props => {\r\n    const newArray = Array.from(props.todos)\r\n    return (    \r\n               \r\n           <ul>          \r\n            {newArray.map(todo => (\r\n                <TodoItem\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                    setUpdate={props.setUpdate}\r\n                />\r\n            ))}\r\n\r\n         </ul>\r\n\r\n        )\r\n    }\r\n\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <h1 style={{\r\n                fontSize: \"6rem\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"2rem\",\r\n                lineHeight: \"1em\",\r\n                color: \"#ececec\",\r\n                textTransform: \"lowercase\",\r\n                textAlign: \"center\",\r\n            }}>\r\n               \r\n                todos</h1>\r\n        </header>\r\n        \r\n       )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n\r\nconst InputTodo = props => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n\r\n    })\r\n\r\n    const onChange = e => {\r\n        setInputText({\r\n           ...inputText,\r\n            [e.target.name]: e.target.value\r\n        })\r\n         \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (inputText.title.trim()) {\r\n            props.addTodoProps(inputText.title)\r\n            setInputText({\r\n                title: \"\",\r\n            })\r\n        } else {\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input-text\"\r\n                placeholder=\"Add todo..\"\r\n                value={inputText.title}\r\n                name=\"title\"\r\n                onChange={onChange}\r\n            />\r\n           \r\n                <button className=\"input-submit\">\r\n                    <FaPlusCircle\r\n                        style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\r\n                      />\r\n                </button>\r\n         \r\n        </form>\r\n\r\n        </>\r\n     )\r\n\r\n\r\n}\r\n\r\nexport default InputTodo","import React, { useState, useEffect }from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst  TodoContainer =()  => {\r\n    const [todos, setTodos] = useState(getInitialTodos())\r\n    const handleChange = (id) => {\r\n        setTodos(prevState => \r\n             prevState.map(todo => {\r\n\r\n                if (todo.id === id) {\r\n\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n                return todo\r\n               \r\n             }),\r\n        )\r\n    };\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        setTodos(\r\n           [...todos, newTodo]\r\n        );\r\n    };\r\n\r\n    const delTodo = id => {\r\n        setTodos({\r\n           \r\n                ...todos.filter(todo => {\r\n                    return todo.id !== id; \r\n                })\r\n\r\n            \r\n        })\r\n    }\r\n\r\n    const setUpdate = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        //storing todos items \r\n\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n    function getInitialTodos() {\r\n       //getting storedItems\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const savedTodos = JSON.parse(temp)\r\n        let res = [];\r\n        for (var i in savedTodos) {\r\n            res.push(savedTodos[i]);\r\n        }\r\n        return res || []\r\n    }\r\n\r\n    return (\r\n\r\n    \r\n            <div className=\"container\">\r\n            <div className=\"inner\">\r\n             <Header />\r\n                    <InputTodo\r\n                        addTodoProps={addTodoItem} />\r\n                    <TodosList\r\n                        todos={todos}\r\n                        handleChangeProps={handleChange}\r\n                        deleteTodoProps={delTodo}\r\n                        setUpdate={setUpdate} />\r\n             </div>\r\n            </div>\r\n    \r\n        \r\n        );\r\n    }\r\n  \r\n    \r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\";\r\n\r\n\r\nReactDOM.render(\r\n    \r\n    <React.StrictMode>\r\n            <TodoContainer /> \r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n   \r\n    \r\n\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3oWJK\",\"checkbox\":\"TodoItem_checkbox__3Iwm1\",\"textInput\":\"TodoItem_textInput__3vdlx\"};"],"sourceRoot":""}