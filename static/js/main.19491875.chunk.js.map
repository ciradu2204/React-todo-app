{"version":3,"sources":["components/TodoItem.module.css","components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/Navigation.js","pages/SinglePage.js","pages/About.js","components/TodoContainer.js","index.js"],"names":["module","exports","TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","style","type","checked","onChange","handleChangeProps","onClick","color","fontSize","deleteTodoProps","fontStyle","opacity","paddingLeft","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","newArray","Array","from","todos","map","Header","fontWeight","marginBottom","lineHeight","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","Navigation","navbarOpen","setNavbarOpen","prev","width","height","path","text","link","to","activeClassName","exact","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","TodoContainer","temp","localStorage","getItem","savedTodos","JSON","parse","res","i","push","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","result","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19491875.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3oWJK\",\"checkbox\":\"TodoItem_checkbox__3Iwm1\",\"textInput\":\"TodoItem_textInput__3vdlx\"};","import React, { useState, useEffect} from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\nimport { FaRegEdit } from \"react-icons/fa\"\r\n\r\n\r\nconst TodoItem = props => {\r\n\r\n    // Editing state\r\n    const [editing, setEditing] = useState(false);\r\n\r\n   //When the edit button is clicked, the editing state is set to true.\r\n    const handleEditing = () => {\r\n        setEditing(true)\r\n    }\r\n\r\n    //When a user press the enter key, the editing state is set to false.\r\n    const handleUpdatedDone = event => {\r\n        if (event.key === \"Enter\") {\r\n            setEditing(false)\r\n        }\r\n    }\r\n\r\n    //When the item is completed, the title will have this style.\r\n    const completedStyle = {\r\n        fontStyle: \"Italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        paddingLeft: 15,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    //When the item is unchecked, the title will have this style. \r\n    const unCompletedStyle = {\r\n        paddingLeft: 15,\r\n    }\r\n\r\n    //Destructuring the todo item\r\n    const { completed, id, title } = props.todo\r\n\r\n    // The different mode style\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    //When editing state is true, the view mode will not be displayed. Otherwise, it will be displayed.\r\n    if (editing) {\r\n        viewMode.display = \"none\";\r\n    } else {\r\n        editMode.display = \"none\";\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        return (\r\n            console.log(\"Cleaning\")\r\n            \r\n     )\r\n    })\r\n  \r\n      \r\n        return (\r\n            <li className={styles.item}>\r\n                 <div  style={viewMode}>\r\n                    <input type=\"checkbox\" checked={completed} onChange={() => props.handleChangeProps(id)} />\r\n                    <button onClick={handleEditing}>\r\n                        <FaRegEdit \r\n                            style={{ color: \"orangered\", fontSize: \"16px\" }}\r\n\r\n                        />\r\n                    </button>\r\n                    <button onClick={() => props.deleteTodoProps(id)}>\r\n                        <FaTrash\r\n                            style={{ color: \"orangered\", fontSize: \"16px\" }}\r\n                        />\r\n                    </button>\r\n                    <span style={completed ? completedStyle : unCompletedStyle}>\r\n                        {title}\r\n                    </span>\r\n                </div>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    style={editMode}\r\n                    className={styles.textInput}\r\n                    value={title}\r\n                    onChange={e => {\r\n                        props.setUpdate(e.target.value, id)\r\n                    }}\r\n                    onKeyDown={handleUpdatedDone}\r\n                />\r\n               \r\n                \r\n            </li>\r\n            )\r\n\r\n    }\r\n       \r\n \r\n\r\n\r\nexport default TodoItem","\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = props => {\r\n    //convert the todos object into an array\r\n    const newArray = Array.from(props.todos)\r\n    return (    \r\n     //Passing each array's element in the TodoItem component\r\n          <ul>          \r\n            {newArray.map(todo => (\r\n                <TodoItem\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                    setUpdate={props.setUpdate}\r\n                />\r\n            ))}\r\n\r\n         </ul>\r\n\r\n        )\r\n    }\r\n\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <h1 style={{\r\n                fontSize: \"6rem\",\r\n                fontWeight: \"600\",\r\n                marginBottom: \"2rem\",\r\n                lineHeight: \"1em\",\r\n                color: \"#ececec\",\r\n                textTransform: \"lowercase\",\r\n                textAlign: \"center\",\r\n            }}>\r\n               \r\n                todos</h1>\r\n        </header>\r\n        \r\n       )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n\r\nconst InputTodo = props => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n\r\n    })\r\n\r\n    const onChange = e => {\r\n        setInputText({\r\n           ...inputText,\r\n            [e.target.name]: e.target.value\r\n        })\r\n         \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (inputText.title.trim()) {\r\n            props.addTodoProps(inputText.title)\r\n            setInputText({\r\n                title: \"\",\r\n            })\r\n        } else {\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input-text\"\r\n                placeholder=\"Add todo..\"\r\n                value={inputText.title}\r\n                name=\"title\"\r\n                onChange={onChange}\r\n            />\r\n           \r\n                <button className=\"input-submit\">\r\n                    <FaPlusCircle\r\n                        style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\r\n                      />\r\n                </button>\r\n         \r\n        </form>\r\n\r\n        </>\r\n     )\r\n\r\n\r\n}\r\n\r\nexport default InputTodo","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\n\r\nconst Navigation = () => {\r\n\r\n    //An array containing data links\r\n    const links = [\r\n        {\r\n            id: 1,\r\n            path: \"/\",\r\n            text: \"Home\",\r\n        },\r\n        {\r\n            id: 2,\r\n            path: \"/about\",\r\n            text: \"About\",\r\n        },\r\n    ]\r\n\r\n    const [navbarOpen, setNavbarOpen] = useState(false)\r\n\r\n    //changes the navbar toggle state\r\n    const handleToggle = () => {\r\n        setNavbarOpen(prev => !prev)\r\n    }\r\n\r\n    //close menu when a link is clicked\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n    \r\n    <nav className=\"navBar\">\r\n     <button\r\n          onClick={handleToggle}>\r\n                {navbarOpen ? (<MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />) : (<FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />)}\r\n     </button>\r\n\r\n     <ul className={`menuNav ${navbarOpen ? \"showMenu\" : \"\"}`}>\r\n     {links.map(link => {\r\n\r\n       return <li key={link.id}><NavLink\r\n       to={link.path}\r\n       activeClassName=\"active-link\"\r\n       onClick={() => closeMenu()}\r\n       exact\r\n       >\r\n       {link.text}\r\n       </NavLink></li>\r\n      })}\r\n     </ul>\r\n\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SinglePage = () => {\r\n    // About page Data \r\n    const aboutData = [\r\n        {\r\n            slug: \"about-app\",\r\n            title: \"About the App\",\r\n            description:\r\n                \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n            slug: \"about-author\",\r\n            title: \"About the Author\",\r\n            description:\r\n                \"This app was developed by Cynthia Iradukunda, a software developer. She is open to any opportunities: internships or jobs. So go ahead and connect with Cynthia Iradukunda on Twitter @IraduCynthia.\",\r\n        },\r\n    ]\r\n\r\n    // Get the relative path(slug)\r\n    const { slug } = useParams()\r\n\r\n    //Get the content based on the collected slug\r\n    const aboutContent = aboutData.find(item => item.slug === slug)\r\n\r\n    //destructure the aboutContent\r\n    const { title, description } = aboutContent\r\n\r\n    return (\r\n        <div className=\"main__content\">\r\n            <h1>{title}</h1>\r\n            <p>{description}</p>\r\n        </div>\r\n       \r\n    )\r\n}\r\nexport default SinglePage;","import React from 'react';\r\n//Provides access to the match object to achieve nested and dynamic routing\r\nimport { Link, useRouteMatch, Route } from \"react-router-dom\";\r\nimport SinglePage from \"./SinglePage\";\r\n\r\nconst About = () => {\r\n\r\n    //destructuring the useRouteMatch()\r\n    const { url, path } = useRouteMatch();\r\n\r\n    return (\r\n        <div className=\"about__content\">\r\n            <ul className=\"about__list\">\r\n                <li>\r\n                    <Link to={`${url}/about-app`}>About App</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/about-author`}>About Author</Link>\r\n                </li>\r\n            </ul>\r\n            <Route path={`${path}/:slug`}>\r\n                <SinglePage />\r\n            </Route>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect }from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\nimport About from \"../pages/About\";\r\n\r\nconst TodoContainer = () => {\r\n    //get stored Items from localstorage\r\n    const getInitialTodos = () => {\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const savedTodos = JSON.parse(temp)\r\n        let res = [];\r\n        for (var i in savedTodos) {\r\n            res.push(savedTodos[i]);\r\n        }\r\n        return res || []\r\n    }\r\n\r\n    //todo state to store items\r\n    const [todos, setTodos] = useState(getInitialTodos());\r\n\r\n    //when the item is checked, changes the item's completed element to true\r\n    const handleChange = (id) => {\r\n        setTodos(prevState => \r\n             prevState.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }                  \r\n                }\r\n                return todo              \r\n             }),\r\n        )\r\n    };\r\n\r\n    // adds an item\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        setTodos(\r\n           [...todos, newTodo]\r\n        );\r\n    };\r\n\r\n    // deletes an item\r\n    const delTodo = id => { \r\n        const result = todos.filter(todo => todo.id !== id);\r\n        setTodos(result)\r\n     \r\n    }\r\n\r\n    //update an item after editing\r\n    const setUpdate = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    //updates the localstorage everytime the todos state changes\r\n    useEffect(() => {\r\n        console.log(\"changing\");\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n \r\n    return (\r\n        <>\r\n    <Navigation />\r\n    <Switch>\r\n    <Route path=\"/\" exact>\r\n            <div className=\"container\">\r\n            <div className=\"inner\">\r\n             <Header />\r\n                    <InputTodo\r\n                        addTodoProps={addTodoItem} />\r\n                    <TodosList\r\n                    todos={todos}\r\n                    handleChangeProps={handleChange}\r\n                    deleteTodoProps={delTodo}\r\n                    setUpdate={setUpdate}\r\n                />\r\n             </div>\r\n                    </div>\r\n      </Route>\r\n      <Route path=\"/about\">\r\n          <About />\r\n      </Route>\r\n    </Switch>\r\n     </>\r\n        );\r\n    }\r\n  \r\n    \r\n\r\nexport default TodoContainer","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport TodoContainer from \"./components/TodoContainer\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n\r\nReactDOM.render(\r\n    \r\n    <React.StrictMode>\r\n     <BrowserRouter>\r\n        <TodoContainer /> \r\n    </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n   \r\n   \r\n);\r\n\r\n"],"sourceRoot":""}